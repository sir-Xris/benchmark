#!/usr/bin/env bash

trap 'exit 0' INT

# To test src and std
run () {
    echo -n "Running $1... "
    INFO=$(env time -f '%E %M' 2>&1 bin/$1 < log/input > log/$1)
    if [[ $? != 0 ]]; then
        echo -e "\033[1;31mSegment Fault\033[0m";
        exit 1;
    fi
    read TIME MEMORY <<< $INFO
    # Convert Memory(KB) to Memory(MB)
    MEMORY=$(echo "scale=2;$MEMORY/1024" | bc 2> /dev/null)
    echo ${TIME}s ${MEMORY}MB
}

# Compile, if you want to change language, edit these 3 lines
g++ -O3 -Wall -o bin/mk mk.cc
if [[ $? != 0 ]]; then exit 1; fi
g++ -O2 -Wall -o bin/std std.cc
if [[ $? != 0 ]]; then exit 1; fi
g++ -O2 -Wall -o bin/src src.cc
if [[ $? != 0 ]]; then exit 1; fi

# Program will not stop unless received an ERR or INT
echo -e "\033[1;35mWarning:\033[0m Press Ctrl+C to interrupt me."

# Wait for one second to take a look at warning
sleep 1

while [[ $? == 0 ]]; do
    echo -e '\nProducing data...'
    bin/mk > log/input
    run std
    run src
    diff -q log/std log/src
done

